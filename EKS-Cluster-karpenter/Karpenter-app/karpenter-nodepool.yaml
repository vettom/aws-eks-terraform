apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: karpenter-default
  namespace: karpenter
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  template:
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot", "on-demand"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["c", "m", "r"]
        - key: karpenter.k8s.aws/instance-generation
          operator: Gt
          values: ["2"]
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: karpenter-default
  limits:
    cpu: 20
    memory: 50Gi
  disruption:
    consolidationPolicy: WhenUnderutilized
    expireAfter: 720h # 30 * 24h = 720h
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: karpenter-default
  namespace: karpenter
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  amiFamily: AL2 # Amazon Linux 2
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 25Gi
        volumeType: gp3
        deleteOnTermination: true
  role: "karpenter-node-eks-demo"  
  detailedMonitoring: true
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "eks-demo"  # Subnt must have this tag and access to Cluster endpoint
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "eks-demo"  # Security group to assign to node based on Tag.
  tags:
    Name: karpenter-provisioned
    karpenter/NodePool: karpenter-default